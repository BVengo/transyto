[tool.poetry]
name = 'transyto'
version = '1.0.0'
description = 'A package for time series photometry in Python.'
authors = [
    'Jaime Andrés Alvarado Montes <jaime-andres.alvarado-montes@hdr.mq.edu.au>',
]
maintainers = [
    'Jaime Andrés Alvarado Montes <jaime-andres.alvarado-montes@hdr.mq.edu.au>'
]
readme = 'README.rst'
license = 'MIT'
repository = 'https://github.com/JAAlvarado-Montes/transyto'
classifiers = [
    'Development Status :: 1 - Production/Stable',
    'License :: OSI Approved :: MIT License',
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Intended Audience :: Science/Research',
    'Topic :: Scientific/Engineering :: Astronomy',
]
include = [
    "LICENSE",
]
packages = [{include = 'transyto'}]


[tool.poetry.dependencies]
python = '^3.8'
argparse = "^1.4.0"
astroplan = "^0.8"
astropy = "^5.1.1"
astroquery = "^0.4.6"
barycorrpy = "^0.4.4"
beautifulsoup4 = "^4.11.1"
ccdproc = "^2.4.0"
importlib-metadata = "^4.8"
matplotlib = "^3.6.2"
mechanicalsoup = "^1.2.0"
natsort = "^8.2.0"
numpy = "^1.23.5"
pandas = "^1.5.2"
photutils = "^1.5.0"
pyfiglet = "^0.8.post1"
scipy = "^1.9.3"
seaborn = "^0.12.1"
tqdm = "^4.64.1"
transitleastsquares = "^1.0.31"
uncertainties = "^3.1.7"
wotan = "^1.10"

# `interact()` requires bokeh>=1.0, ipython.
bokeh               = { version = '^3.0.2', optional = true }
ipython             = { version = '^8.6.0', optional = true }

# `PLDCorrector` requires pybind11, celerite.
pybind11            = { version = '^2.10.1', optional = true }
celerite            = { version = '^0.4.2', optional = true }


[tool.poetry.extras]
interact = ['bokeh', 'ipython']
pld      = ['pybind11', 'celerite']


[tool.poetry.group.test.dependencies]
pytest = '^6.0.0'
pycodestyle = "^2.9.1"
pytest-cov = "^4.0.0"
codecov = "^2.1.12"
pytest-remotedata = "^0.3.3"
pytest-doctestplus = "^0.12.1"
codacy-coverage = "^1.3.11"


[tool.pytest.ini_options]
addopts = [
    '-x',
    '--import-mode=importlib',
    '--doctest-modules',
    '--ignore=setup.py'
]


[build-system]
requires = ['poetry-core']
build-backend = 'poetry.core.masonry.api'